services:
  db:
    build: backend/db
    secrets:
      - db_password

  redis:
    image: redis:latest

  api:
    build: 
      context: backend/api
      args:
        - DB_USERNAME=securecart
        - DB_DATABASE=securecart
        - DB_HOST=db
        - REDIS_HOST=redis
    secrets:
      - db_password
    profiles:
      - run
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_started
        restart: true
      redis:
        condition: service_started
        restart: true

  dev-env:
    build: 
      context: dev-env
      args:
        - DB_HOST=db
        - DB_USERNAME=securecart
        - DB_PASSWORD=${DEV_DB_PASSWORD}
        - DB_DATABASE=securecart
        - REDIS_HOST=redis
    profiles:
      - dev
    volumes:
      - .:/root/app
      - ${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock
    hostname: securecart-dev
    ports:
      - '127.0.0.1:9999:9999' # for code-server

  pgadmin:
    image: dpage/pgadmin4
    ports: 
      - '127.0.0.1:8000:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=dev@securecart.com
      - PGADMIN_DEFAULT_PASSWORD=${DEV_DB_PASSWORD}
    profiles:
      - dev
    depends_on:
      db:
        condition: service_started
        restart: true

  redisinsight:
    image: redis/redisinsight:latest
    ports:
      - '127.0.0.1:5540:5540'
    profiles:
      - dev
    depends_on:
      redis:
        condition: service_started
        restart: true
        
  portainer:
    image: portainer/portainer-ce
    volumes:
      - /run/user/1000/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:9000:9000'

secrets:
  db_password:
    environment: DB_PASSWORD
