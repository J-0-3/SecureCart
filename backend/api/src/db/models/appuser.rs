//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "appuser")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(column_type = "Text", unique)]
    pub email: String,
    #[sea_orm(column_type = "Text")]
    pub forename: String,
    #[sea_orm(column_type = "Text")]
    pub surname: String,
    pub age: i16,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::apporder::Entity")]
    Apporder,
    #[sea_orm(has_one = "super::password::Entity")]
    Password,
}

impl Related<super::apporder::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Apporder.def()
    }
}

impl Related<super::password::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Password.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
